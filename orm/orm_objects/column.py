import inspect
from .dissambler import get_assigned_name

class Column[T]:
    __slots__ = (
        "column_name",
        "column_value",
        "is_primary_key",
        "is_autogenerated",
        "is_auto_increment",
        "is_unique",
    )

    def __init__(
        self,
        column_value,
        *,
        is_primary_key=False,
        is_autogenerated=False,
        is_auto_increment=False,
        is_unique=False,
    ) -> None:
        self.column_name:str = get_assigned_name(inspect.currentframe().f_back)
        self.column_value:T = column_value
        self.is_primary_key:bool = is_primary_key
        self.is_autogenerated:bool = is_autogenerated
        self.is_auto_increment:bool = is_auto_increment
        self.is_unique:bool = is_unique

    def __repr__(self) -> str:
        return f"<Column: {self.column_name}>"



if __name__ == "__main__":

    class Model:
        id: Column[int] = Column(234, is_auto_increment=True)

    my_class = Model()

    assert my_class.id.column_value == 234
    assert my_class.id.column_name == "id"
